Expr:
    PostfixExpr: [PostfixExpr#post]

PostfixExpr:
    Ident: [Identifier#ident]
    Array: [Identifier#ident, PostfixFollow#follow]
    Primary: [PrimaryExpr#prim]

PostfixFollow:
    Dot: [dot, PostfixExpr#follow]
    Array: [Array#array]
    ArrayDot: [Array#array, dot, PostfixExpr#postfix]
    ArrayFollow: [Array#array, PostfixFollow#pffollow]
    Call: [Call#call]
    CallDot: [Call#call, dot, PostfixExpr#follow]
    CallFollow: [Call#call, PostfixFollow#pffollow]

Array:
    Slice: [lbrack, rbrack]
    Index: [lbrack, Expr#expr, rbrack]

Call:
    Empty: [lparen, rparen]
    Args: [lparen, ArgList#args, rparen]

ArgList:
    Arg: [Expr#arg]
    Args: [Expr#arg, comma, ArgList#next]

PrimaryExpr:
    Float: [f64value#value]
    Integer: [i64value#value]
    Parenthesis: [lparen, Expr#expr, rparen]

Identifier:
    Ident: [identifier#value]

IdentifierList:
    Ident: [Identifier#value]
    IdentFollow: [Identifier#value, dot, IdentifierList#next]

Type:
    I32: [i64#value]
    F32: [f64#value]

AssignExpr:
    Expr: [Expr#expr]
    Assign: [IdentifierList#ident, assign, Expr#expr]

Stmt:
    ExprStmt: [AssignExpr#expr]

Stmts:
    Stmt: [Stmt#stmt]
    Stmts: [Stmt#stmt, Stmts#follow]

Decl:
    UnInit: [var, Type#type, identifier#ident, semicolon]
    Init: [var, Type#type, identifier#ident, assign, Expr#expr, semicolon]

BlockStmt:
    Empty: [lcurly, rcurly]
    Block: [lcurly, DeclStmts#declStmts, rcurly]

DeclStmts:
    Decl: [Decl#decl]
    Decls: [Decl#decl, DeclStmts#follow]
    Stmt: [Stmt#stmt]
    Stmts: [Stmt#stmt, DeclStmts#follow]
